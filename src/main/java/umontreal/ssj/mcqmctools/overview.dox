/**
 * @package umontreal.ssj.mcqmctools
 *
 * Tools for Simple Monte Carlo and Quasi-Monte Carlo Experiments.
 *
 * @anchor REF_mcqmctools_overview_sec_overview
 *
 * This package offers elementary tools to help perform Monte Carlo and 
 * quasi-Monte Carlo experiments with simple stochastic simulation (Monte Carlo) models.
 * 
 * To use these tools, the simulation model must be represented in a class that 
 * implements the @ref MonteCarloModel interface.  This interface requires in particular a method
 * @ref simulate to simulate the model and a method  @ref getPerformance to recover  the performance
 * measure(s) (or data) returned by the simulation.  This ``performance'' can be any type of object.
 * In the simplest case, it is a real number; this is what is assumed in the @ref MonteCarloModelDouble class.
 * In the class @ref MonteCarloModelDoubleArray, the returned performance is assumed to be a 
 * @ref double[] array, so a vector of several measures can be returned for each simulation run.
 * In @ref MonteCarloModelCV, it is assumed that the simulation produces a real-valued performance,
 * plus a vector of zero-mean control variates.
 * 
 * The class @ref MonteCarloExperiment provides methods to perform a simulation experiment that 
 * simulates the model for #n independent runs, then recover the data in statistical collectors,
 * compute confidence intervals, make histograms, scatter plots, etc.  
 *  
 * The class @ref RQMCExperiment provides tools to perform similar experiments, but with 
 * randomized quasi-Monte Carlo (RQMC) instead.  In an RQMC experiment, one simulates the system 
 * #n times, using an RQMC point set of size #n, and this is repeated #r times by
 * randomizing the point set independently for each of the #r replications.
 * 
 * 
 * @ref RQMCExperimentSeries can perform RQMC experiments for a series of several values of #n,
 * for example all powers of 2 in some interval, in order to study the behavior of RQMC estimators
 * as a function of #n. For example, one might be interested in estimating how the variance
 * (and in some cases the bias) converges as a function of #n, and perhaps plot it in log-log scale.
 *
 *
 *
 * # Examples
 *
 * @anchor REF_markovchainrqmc_overview_sec_examples
 *
 * The following examples show how to use this package.   (To do... ) 
 *
 * 
 */
